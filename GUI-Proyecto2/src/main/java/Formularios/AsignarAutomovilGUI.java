package Formularios;

import Control.ControlAutomovil;
import Control.ControlPlacas;
import DTOss.Automovil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.ConexionBD;

/**
 *
 * @author eduar
 */
public class AsignarAutomovilGUI extends javax.swing.JFrame {

    /**
     * Creates new form AsignarPlacasGUI
     */
    public AsignarAutomovilGUI() {
        initComponents();
    }
    
    // Método para mostrar los datos de la tabla Automovil en un JTable
    public void mostrarDatosAutomovil() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Número de Serie");
        modelo.addColumn("Marca");
        modelo.addColumn("Línea");
        modelo.addColumn("Color");
        modelo.addColumn("Modelo");
        modelo.addColumn("Número de Placas Anteriores");

        String sql = "SELECT * FROM Automovil";

        try (Connection connection = ConexionBD.obtenerConexion();
                PreparedStatement statement = connection.prepareStatement(sql);
                ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                Object[] fila = new Object[6];
                fila[0] = resultSet.getString("NumeroSerie");
                fila[1] = resultSet.getString("Marca");
                fila[2] = resultSet.getString("Linea");
                fila[3] = resultSet.getString("Color");
                fila[4] = resultSet.getInt("Modelo");
                fila[5] = resultSet.getString("NumeroPlacasAnteriores");
                modelo.addRow(fila);
            }

            jTableAutomovil.setModel(modelo); // jTableAutomovil es el nombre de tu JTable

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar los datos de la tabla Automovil: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSolicitarPlacas = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        txtMarca = new javax.swing.JTextField();
        txtLinea = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumSerie = new javax.swing.JTextField();
        btnActualizarTabla = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAutomovil = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Asignar Automovil");

        jLabel2.setText("Marca");

        jLabel4.setText("Linea");

        jLabel5.setText("Color");

        jLabel6.setText("Modelo");

        btnSolicitarPlacas.setText("Registrar Carro");
        btnSolicitarPlacas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarPlacasActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Cancelar");

        jLabel3.setText("Numero Serie");

        btnActualizarTabla.setText("Actualizar Tabla");
        btnActualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTablaActionPerformed(evt);
            }
        });

        jTableAutomovil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NumeroSerie", "Marca", "Linea", "Color", "Modelo", "NumeroPlacasAnteriores"
            }
        ));
        jScrollPane1.setViewportView(jTableAutomovil);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnActualizarTabla)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtModelo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(txtColor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLinea, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNumSerie, javax.swing.GroupLayout.Alignment.LEADING)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(btnSolicitarPlacas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(172, 172, 172))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNumSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtLinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSolicitarPlacas)
                    .addComponent(jToggleButton1)
                    .addComponent(btnActualizarTabla))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSolicitarPlacasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarPlacasActionPerformed
        // Validar los campos del formulario
        if (camposValidos()) {
            // Obtener valores de los campos del formulario}
            String numSerie = txtNumSerie.getText();
            String marca = txtMarca.getText();
            String linea = txtLinea.getText();
            String color = txtColor.getText();
            int modelo;
            try {
                modelo = Integer.parseInt(txtModelo.getText());
            } catch (NumberFormatException e) {
                // Manejar el error de conversión
                JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en el campo de modelo.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Salir del método para evitar continuar con el proceso incorrecto
            }

            // Crear un DTO con los datos del automóvil
            Automovil automovil = new Automovil();
            automovil.setNumeroSerie(numSerie);
            automovil.setMarca(marca);
            automovil.setLinea(linea);
            automovil.setColor(color);
            automovil.setModelo(modelo);

            // Enviar la solicitud de registro al sistema (usando la lógica de control adecuada)
            ControlAutomovil automovilControl = new ControlAutomovil();
            boolean registroExitoso = automovilControl.registrarAutomovil(automovil);

            // Mostrar mensaje de confirmación o error
            if (registroExitoso) {
                JOptionPane.showMessageDialog(this, "Automóvil registrado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al registrar el automóvil.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //Mostrar mensaje de error si los campos no son válidos
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos correctamente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSolicitarPlacasActionPerformed

    private void btnActualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTablaActionPerformed
        mostrarDatosAutomovil();
    }//GEN-LAST:event_btnActualizarTablaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarTabla;
    private javax.swing.JButton btnSolicitarPlacas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAutomovil;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtLinea;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtNumSerie;
    // End of variables declaration//GEN-END:variables

    private boolean camposValidos() {
        // Verificar que los campos obligatorios estén llenos
        if (txtMarca.getText().isEmpty()
                || txtLinea.getText().isEmpty()
                || txtColor.getText().isEmpty()
                || txtModelo.getText().isEmpty()) {
            return false;
        }
        // Si el automóvil es nuevo, no se requiere el campo de placas anteriores
        return true;
    }
    // Test
}
